package de.thekid.dialog.scriptlet;

import com.github.mustache.MustacheEngine;
import com.github.mustache.Context;
import com.github.mustache.ResourcesIn;

import native standard.substr;
import native standard.sscanf;

/**
 * Website scriptlet for the Dialog album
 *
 * @see   http://dialog.friebes.info/
 */
public class WebsiteScriptletResponse extends scriptlet.xml.XMLScriptletResponse {
  protected var $engine= new MustacheEngine().withTemplates(new ResourcesIn(ClassLoader::getDefault()));

  /**
   * Process this response and run transformation
   */
  public bool process() {
    if (!$this._processed) return false;

    // Debug
    // util.log.Logger::getInstance().getCategory().debug($this._stylesheet[1], '@', $this.document.root());

    // Transform
    $this.content= $this.engine.transform($this._stylesheet[1], new Context($this.document.root()) {
      protected var pointer(var $ptr, string? $segment, string[]? $params) {
        if ('@' === $segment[0]) {
          util.log.Logger::getInstance().getCategory().debug($segment, '@', $ptr.getName(), ' -> ', $ptr.getAttribute(substr($segment, 1)));
          return $ptr.getAttribute(substr($segment, 1));
        } else {
          foreach ($child in $ptr.children) {
            if ($segment === $child.getName()) {
              util.log.Logger::getInstance().getCategory().debug($segment, '@', $ptr.getName(), ' -> ', $child);
              return $child;
            }
          }
          util.log.Logger::getInstance().getCategory().warn($segment, '@', $ptr.getName());
          return null;
        }
      }

      public bool isTruthy(var? $result) {
        if ($result instanceof xml.Node) {
          return $result.children || $result.getContent();
        } else {
          return parent::isTruthy($result);
        }
      }

      public bool isList(var? $result) {
        if ($result instanceof xml.Node) {
          if (!$result.children) return false;
          $name= $result.children[0].getName();
          foreach ($child in $result.children) {
            if ($name !== $child.getName()) return false;
          }
          return true;
        } else {
          return parent::isList($result);
        }
      }

      public bool isHash(var? $result) {
        if ($result instanceof xml.Node) {
          return true;
        } else {
          return parent::isList($result);
        }
      }

      public bool asContext(var? $result) {
        if ($result instanceof xml.Node) {
          return $this.newInstance($result);
        } else {
          return parent::asContext($result);
        }
      }

      public string asString(var? $result) {
        if ($result instanceof xml.Node) {
          return $result.getContent();
        } else {
          return parent::asString($result);
        }
      }

      public bool asTraversable(var? $result) {
        if ($result instanceof xml.Node) {
          return $result.children;
        } else {
          return parent::asTraversable($result);
        }
      }
    });
    return true;
  }
}
